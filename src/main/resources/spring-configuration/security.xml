<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd"
             default-autowire="byName">


    <!--<global-method-security secured-annotations="enabled" />-->


    <http auto-config="true" access-denied-page="/jsp/error403.jsp" entry-point-ref="http403ForbiddenEntryPoint">
        <intercept-url pattern="/jsp/registration.jsp" access="ROLE_ADMIN,ROLE_USER, ROLE_ANONYMOUS"/>
        <intercept-url pattern="/start/" access="ROLE_ADMIN,ROLE_USER"/>
        <intercept-url pattern="/*Add*/" access="ROLE_USER, ROLE_ADMIN"/>
        <intercept-url pattern="/*Update*/" access="ROLE_ADMIN"/>
        <intercept-url pattern="/*Delete*/" access="ROLE_ADMIN"/>
        <intercept-url pattern="*sample" access="ROLE_ADMIN"/>
        <form-login authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-handler-ref="authenticationFailureHandler"/>
        <logout logout-url="/logout" success-handler-ref="logoutSuccessHandler"/>
        <!--<logout success-handler-ref="logoutSuccessHandler" />-->
        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/>
        <remember-me services-ref="rememberMeServices" key="springRocks"/>
        <!--<custom-filter position="REMEMBER_ME_FILTER" ref="myRememberMeFilter" />-->
    </http>


    <beans:bean id="rememberMeServices" class=
            "org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
        <beans:property name="userDetailsService" ref="rememberMeUserDetailsService"/>
        <beans:property name="key" value="springRocks"/>
    </beans:bean>


    <beans:bean id="http403ForbiddenEntryPoint"
                class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>
    <beans:bean id="authenticationSuccessHandler"
                class="com.imhos.security.server.handlers.GWTAuthenticationSuccessHandler"/>
    <beans:bean id="authenticationFailureHandler"
                class="com.imhos.security.server.handlers.GWTAuthenticationFailureHandler"/>
    <beans:bean id="logoutSuccessHandler"
                class="com.imhos.security.server.handlers.GWTLogoutSuccessHandler"/>


    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <beans:constructor-arg index="0" value="256"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref='userDetailsService'>
            <!--<password-encoder hash="md5"/>-->
        </authentication-provider>
    </authentication-manager>


    <beans:bean name="userDetailsService" class="com.imhos.security.server.UserDetailsServiceImpl"/>

    <beans:bean name="rememberMeUserDetailsService" class="com.imhos.security.server.UserDetailsServicesSocialWrapper"/>

    <beans:bean name="facebookController" class="com.imhos.security.server.social.facebook.FacebookController">
        <beans:constructor-arg name="appID" value="${facebook.application.id}"/>
        <beans:constructor-arg name="appSecret" value="${facebook.application.secret}"/>
        <beans:constructor-arg name="facebookCallBackUrl" value="${facebook.call.back.url}"/>
    </beans:bean>

    <beans:bean name="twitterController" class="com.imhos.security.server.social.twitter.TwitterController">
        <beans:constructor-arg name="appID" value="${twitter.application.id}"/>
        <beans:constructor-arg name="appSecret" value="${twitter.application.secret}"/>
        <beans:constructor-arg name="twitterCallBackUrl" value="${twitter.call.back.url}"/>
    </beans:bean>
    <beans:bean name="twitterController2" class="com.imhos.security.server.social.twitterNew.TwitterController2">
        <beans:constructor-arg name="appID" value="${twitter.application.id}"/>
        <beans:constructor-arg name="appSecret" value="${twitter.application.secret}"/>
        <beans:constructor-arg name="twitterCallBackUrl" value="${twitter.call.back.url}"/>
    </beans:bean>
    <!--<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<beans:property name="exposedContextBeanNames">-->
    <!--<beans:list>-->
    <!--<beans:value>authenticationSerializer</beans:value>-->
    <!--<beans:value>authenticationExceptionSerializer</beans:value>-->
    <!--<beans:value>securityContextHolder</beans:value>-->
    <!--</beans:list>-->
    <!--</beans:property>-->
    <!--</beans:bean>-->

    <beans:bean name="socialResponseBuilder" class="com.imhos.security.server.social.SocialResponseBuilder"/>
    <beans:bean name="authenticationSerializer" class="com.imhos.security.server.serializer.AuthenticationSerializer"/>
    <beans:bean name="authenticationExceptionSerializer"
                class="com.imhos.security.server.serializer.AuthenticationExceptionSerializer"/>
    <!--<beans:bean name="securityContextHolder" class="org.springframework.security.core.context.SecurityContextHolder"/>-->
</beans:beans>
